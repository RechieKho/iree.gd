name: Build and Export Artifact

on:
  push:
    branches: [main, build-workflow] # Remember to remove `build-workflow`
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [release, debug]
        include:
          - build_type: release
            cmake_build_type_keyword: Release

          - build_type: debug
            cmake_build_type_keyword: RelWithDebInfo

          - os: ubuntu-latest
            target: [linux, android]

          - target: linux
            arch: [x86_64, x86_32, arm64, arm32]

          - target: android
            arch: [x86_64, arm64]

          - os: windows-latest
            target: windows

          - target: windows
            arch: [x86_64, x86_32]

          - os: macos-latest
            target: [macos, ios]

          - target: macos
            arch: universal

          - target: ios
            arch: [arm64, x86_64]

    steps:
      - name: Logging
        run: |
          echo "Host: ${{ matrix: os }}"
          echo "target: ${{ matrix.target }}"
          echo "arch: ${{ matrix.arch }}"
          echo "build type: ${{ matrix.build_type }}"
          echo "cmake build type keyword: ${{ matrix.cmake_build_type_keyword }}"

      #- name: Check out code
      #uses: actions/checkout@v2
      #with:
      #submodules: recursive

      #- name: Prepare Vulkan SDK
      #if: matrix.os == 'ubuntu-latest'
      #uses: humbletim/setup-vulkan-sdk@v1.2.0
      #with:
      #vulkan-query-version: 1.3.204.0
      #vulkan-components: Vulkan-Headers, Vulkan-Loader
      #vulkan-use-cache: true

      #- name: Set up MSVC Dev Cmd
      #if: matrix.os == 'windows-latest'
      #uses: ilammy/msvc-dev-cmd@7315a94840631165970262a99c72cfb48a65d25d # v1.12.0

      #- uses: seanmiddleditch/gha-setup-ninja@master

      #- name: Set up CMake
      #shell: bash
      #run: |
      #if [ ! -d build ]; then
      #mkdir build
      #fi
      #cd build
      #cmake .. -G Ninja ${{ matrix.cmake_build_type }}

      #- name: Build project
      #run: ninja -C build

      #- name: Export artifact
      #uses: actions/upload-artifact@v2
      #with:
      #name: ${{ matrix.artifact_name }}
      #path: ${{ matrix.artifact_path }}
