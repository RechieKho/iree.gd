name: Build and Export Artifact

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            artifact_name: libiree-gd.linux.release.so
            artifact_path: build/lib/libiree-gd.linux.release.so
            cmake_build_type: ""
          - os: windows-latest
            artifact_name: libiree-gd.windows.release.dll
            artifact_path: build/lib/libiree-gd.windows.release.dll
            cmake_build_type: "-DCMAKE_BUILD_TYPE=Release"

    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          submodules: recursive
      
      - name: Prepare Vulkan SDK
        if: matrix.os == 'ubuntu-latest'
        uses: humbletim/setup-vulkan-sdk@v1.2.0
        with:
          vulkan-query-version: 1.3.204.0
          vulkan-components: Vulkan-Headers, Vulkan-Loader
          vulkan-use-cache: true

      - name: Set up MSVC Dev Cmd
        if: matrix.os == 'windows-latest'
        uses: ilammy/msvc-dev-cmd@7315a94840631165970262a99c72cfb48a65d25d # v1.12.0

      - uses: seanmiddleditch/gha-setup-ninja@master

      - name: Set up CMake
        shell: bash
        run: | 
          if [ ! -d build ]; then
            mkdir build
          fi
          cd build
          cmake .. -G Ninja ${{ matrix.cmake_build_type }}

      - name: Build project
        run: ninja -C build

      - name: Export artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.artifact_path }}
